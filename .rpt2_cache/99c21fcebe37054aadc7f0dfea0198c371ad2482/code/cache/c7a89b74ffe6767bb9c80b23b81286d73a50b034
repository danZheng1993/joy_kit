{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nimport { ModalPortal } from '../../modal/ModalPortal';\r\n// ======================\r\n// Styles\r\n// ======================\r\nvar animations = function (direction) { return function (isOpen) {\r\n    var initialTransform = (direction === 'left' ? '-' : '') + \"100%\";\r\n    if (isOpen) {\r\n        return {\r\n            translateX: [0, initialTransform]\r\n        };\r\n    }\r\n    return {\r\n        translateX: initialTransform\r\n    };\r\n}; };\r\nvar panelRules = function (direction) {\r\n    return css((_a = {\r\n            maxWidth: '100%',\r\n            minHeight: '100%',\r\n            padding: '40px',\r\n            position: 'fixed',\r\n            width: '600'\r\n        },\r\n        _a[direction] = '0',\r\n        _a.top = '0',\r\n        _a.transform = \"translateX(\" + (direction === 'left' ? '-' : '') + \"100%)\",\r\n        _a.background = 'white',\r\n        _a));\r\n    var _a;\r\n};\r\n/**\r\n * A Panel Overlay is a content box that slides in from a side of the screen\r\n */\r\nvar PanelOverlay = function (props) {\r\n    return (React.createElement(ModalPortal, tslib_1.__assign({ type: \"panel-overlay\" }, props, { animations: animations(props.direction), delay: props.isOpen && 80, styleRules: panelRules(props.direction) })));\r\n};\r\nPanelOverlay.defaultProps = {\r\n    closeOnBackgroundClick: true,\r\n    closeOnEscape: true,\r\n    hideLightbox: false,\r\n    hideLightboxOnInactive: true,\r\n    direction: 'right'\r\n};\r\nexport { PanelOverlay };\r\n//# sourceMappingURL=PanelOverlay.js.map","map":{"version":3,"file":"PanelOverlay.js","sourceRoot":"","sources":["PanelOverlay.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,OAAO,EACL,WAAW,EAEZ,MAAM,yBAAyB,CAAC;AAkBjC,yBAAyB;AACzB,SAAS;AACT,yBAAyB;AAEzB,IAAM,UAAU,GAAG,UAAA,SAAS,IAAI,OAAA,UAAA,MAAM;IACpC,IAAM,gBAAgB,GAAG,CAAG,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAM,CAAC;IAClE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC;YACL,UAAU,EAAE,CAAC,CAAC,EAAE,gBAAgB,CAAC;SAClC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC;QACL,UAAU,EAAE,gBAAgB;KAC7B,CAAC;AACJ,CAAC,EAX+B,CAW/B,CAAC;AAEF,IAAM,UAAU,GAAG,UAAC,SAAqB;IACvC,OAAA,GAAG;YACD,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,MAAM;YACjB,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,OAAO;YACjB,KAAK,EAAE,KAAK;;QACZ,GAAC,SAAS,IAAG,GAAG;QAChB,MAAG,GAAE,GAAG;QACR,YAAS,GAAE,iBAAc,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,WAAO;QAC/D,aAAU,GAAE,OAAO;YACnB;;AAVF,CAUE,CAAC;AAEL;;GAEG;AAEH,IAAM,YAAY,GAAqB,UAAA,KAAK;IAC1C,MAAM,CAAC,CACL,oBAAC,WAAW,qBACV,IAAI,EAAC,eAAe,IAChB,KAAK,IACT,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,EACvC,KAAK,EAAE,KAAK,CAAC,MAAM,IAAI,EAAE,EACzB,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,IACvC,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,YAAY,CAAC,YAAY,GAAG;IAC1B,sBAAsB,EAAE,IAAI;IAC5B,aAAa,EAAE,IAAI;IACnB,YAAY,EAAE,KAAK;IACnB,sBAAsB,EAAE,IAAI;IAC5B,SAAS,EAAE,OAAO;CACnB,CAAC;AAEF,OAAO,EAAE,YAAY,EAAE,CAAC"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/panel/overlay/PanelOverlay.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from 'react';\r\nimport { BaseProps as ModalPortalProps } from '../../modal/ModalPortal';\r\nexport interface RenderProps {\r\n    closePortal: () => any;\r\n}\r\nexport interface Props extends ModalPortalProps {\r\n    /** Where the panel should come in from */\r\n    direction?: Directions;\r\n    description?: any;\r\n    content?: any;\r\n}\r\nexport declare type Directions = 'left' | 'right';\r\nexport declare type Phase = 'out' | 'in';\r\n/**\r\n * A Panel Overlay is a content box that slides in from a side of the screen\r\n */\r\ndeclare const PanelOverlay: React.SFC<Props>;\r\nexport { PanelOverlay };\r\n"}}
