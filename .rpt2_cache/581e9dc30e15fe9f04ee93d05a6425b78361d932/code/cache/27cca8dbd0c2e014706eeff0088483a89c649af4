{"code":"var Colors = /** @class */ (function () {\r\n    function Colors() {\r\n    }\r\n    Colors.hexToRgb = function (hex) {\r\n        var hexVals = hex.split('');\r\n        var rHex = hexVals[1] + hexVals[2];\r\n        var gHex = hexVals[3] + hexVals[4];\r\n        var bHex = hexVals[5] + hexVals[6];\r\n        var r = parseInt(rHex, 16);\r\n        var g = parseInt(gHex, 16);\r\n        var b = parseInt(bHex, 16);\r\n        return [r, g, b];\r\n    };\r\n    Colors.hex3to6 = function (hex3) {\r\n        var hex6 = hex3.split('');\r\n        for (var i = 1; i < hex6.length; i += 2) {\r\n            hex6.splice(i, hex6[i]);\r\n        }\r\n        return hex6;\r\n    };\r\n    Colors.rgbaStringToArray = function (rgbaString) {\r\n        var temp = rgbaString.slice(rgbaString.indexOf('(') + 1, rgbaString.indexOf(')'));\r\n        rgbaString = temp.split(',').map(function (ele) {\r\n            return parseFloat(ele);\r\n        });\r\n        return rgbaString;\r\n    };\r\n    Colors.findRgb = function (colorString) {\r\n        var rgbArray;\r\n        if (colorString.split('')[0] === '#') {\r\n            rgbArray =\r\n                colorString.length == 7\r\n                    ? Colors.hexToRgb(colorString)\r\n                    : colorString.length == 4\r\n                        ? Colors.hexToRgb(Colors.hex3to6(colorString))\r\n                        : [];\r\n            // telemetry.debug('returned rgb array' + rgbArray.toString());\r\n            return rgbArray;\r\n        }\r\n        else if (colorString.split('(')[0] == 'rgb' || 'rgba') {\r\n            // colorString == ('rgb()' || 'rgba()'\r\n            rgbArray = Colors.rgbaStringToArray(colorString);\r\n            // telemetry.debug('returned rgb array' + rgbArray.toString());\r\n            // remove to allow alpha returned\r\n            rgbArray.pop();\r\n            return rgbArray;\r\n            // } else telemetry.debug('bad color:' + colorString);\r\n        }\r\n    };\r\n    return Colors;\r\n}());\r\nexport { Colors };\r\n//# sourceMappingURL=colors.js.map","map":{"version":3,"file":"colors.js","sourceRoot":"","sources":["colors.ts"],"names":[],"mappings":"AAAA;IAAA;IAoDA,CAAC;IAnDgB,eAAQ,GAAG,UAAC,GAAW;QACpC,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACrC,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACrC,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACrC,IAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC7B,IAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC7B,IAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC7B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;IAEa,cAAO,GAAG,UAAA,IAAI;QAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;IAEa,wBAAiB,GAAG,UAAA,UAAU;QAC3C,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CACzB,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAC3B,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CACxB,CAAC;QACF,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAS,GAAG;YAC3C,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC,CAAC;IAEY,cAAO,GAAG,UAAA,WAAW;QACjC,IAAI,QAAQ,CAAC;QACb,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACrC,QAAQ;gBACN,WAAW,CAAC,MAAM,IAAI,CAAC;oBACrB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAC9B,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;wBACvB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBAC9C,CAAC,CAAC,EAAE,CAAC;YACX,+DAA+D;YAC/D,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;YACxD,sCAAsC;YACtC,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;YACjD,+DAA+D;YAC/D,iCAAiC;YACjC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC;YAChB,sDAAsD;QACxD,CAAC;IACH,CAAC,CAAC;IACJ,aAAC;CAAA,AApDD,IAoDC;AAED,OAAO,EAAE,MAAM,EAAE,CAAC"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/util/colors.d.ts","text":"declare class Colors {\r\n    private static hexToRgb;\r\n    private static hex3to6;\r\n    private static rgbaStringToArray;\r\n    static findRgb: (colorString: any) => any;\r\n}\r\nexport { Colors };\r\n"}}
