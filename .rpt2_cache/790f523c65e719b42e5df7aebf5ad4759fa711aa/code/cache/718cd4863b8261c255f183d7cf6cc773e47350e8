{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nimport { COLORS } from '../../../styles/variables';\r\n// ======================\r\n// Styles\r\n// ======================\r\nexport var containerRules = css({\r\n    background: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: '40px',\r\n    width: '100%',\r\n    '> *:not(:last-child)': {\r\n        marginBottom: 40\r\n    }\r\n});\r\nvar headerRules = css({\r\n    fontWeight: 100,\r\n    margin: 0\r\n});\r\nvar descriptionRules = css({\r\n    fontSize: 15,\r\n    lineHeight: '24px',\r\n    letterSpacing: 0.2\r\n});\r\nvar navItemRules = css({\r\n    flexGrow: 1,\r\n    '> div:last-child': {\r\n        borderBottom: \"1px solid \" + COLORS.GRAY_SECONDARY\r\n    }\r\n});\r\nvar actionRules = css({\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& > *:not(:last-child)': {\r\n        marginRight: 20\r\n    }\r\n});\r\n// @TODO: NOT USED CURRENTLY\r\n// const renderNavItems = navItems => {\r\n//   if (navItems instanceof Array) {\r\n//     return navItems.map(({ content, key, handleOnClick }) => (\r\n//       <PanelNavItem key={key} content={content} handleOnClick={handleOnClick} />\r\n//     ));\r\n//   }\r\n//   return navItems;\r\n// };\r\nexport var PanelNavigator = function (_a) {\r\n    var actions = _a.actions, children = _a.children, description = _a.description, header = _a.header, navItems = _a.navItems;\r\n    return (React.createElement(\"section\", tslib_1.__assign({ className: \"panel-navigator\" }, containerRules),\r\n        React.createElement(\"h2\", tslib_1.__assign({}, headerRules), header),\r\n        React.createElement(\"div\", tslib_1.__assign({}, descriptionRules), description),\r\n        React.createElement(\"div\", tslib_1.__assign({}, navItemRules), navItems),\r\n        actions && React.createElement(\"div\", tslib_1.__assign({}, actionRules), actions)));\r\n};\r\n//# sourceMappingURL=PanelNavigator.js.map","map":{"version":3,"file":"PanelNavigator.js","sourceRoot":"","sources":["PanelNavigator.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAK7B,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AA0BnD,yBAAyB;AACzB,SAAS;AACT,yBAAyB;AAEzB,MAAM,CAAC,IAAM,cAAc,GAAwC,GAAG,CAAC;IACrE,UAAU,EAAE,OAAO;IACnB,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,MAAM;IACf,KAAK,EAAE,MAAM;IACb,sBAAsB,EAAE;QACtB,YAAY,EAAE,EAAE;KACjB;CACF,CAAC,CAAC;AAEH,IAAM,WAAW,GAAG,GAAG,CAAC;IACtB,UAAU,EAAE,GAAG;IACf,MAAM,EAAE,CAAC;CACV,CAAC,CAAC;AAEH,IAAM,gBAAgB,GAAG,GAAG,CAAC;IAC3B,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE,MAAM;IAClB,aAAa,EAAE,GAAG;CACnB,CAAC,CAAC;AAEH,IAAM,YAAY,GAAG,GAAG,CAAC;IACvB,QAAQ,EAAE,CAAC;IACX,kBAAkB,EAAE;QAClB,YAAY,EAAE,eAAa,MAAM,CAAC,cAAgB;KACnD;CACF,CAAC,CAAC;AAEH,IAAM,WAAW,GAAG,GAAG,CAAC;IACtB,OAAO,EAAE,MAAM;IACf,cAAc,EAAE,QAAQ;IACxB,wBAAwB,EAAE;QACxB,WAAW,EAAE,EAAE;KAChB;CACF,CAAC,CAAC;AAEH,4BAA4B;AAC5B,uCAAuC;AACvC,qCAAqC;AACrC,iEAAiE;AACjE,mFAAmF;AACnF,UAAU;AACV,MAAM;AACN,qBAAqB;AACrB,KAAK;AAEL,MAAM,CAAC,IAAM,cAAc,GAAqB,UAAC,EAMhD;QALC,oBAAO,EACP,sBAAQ,EACR,4BAAW,EACX,kBAAM,EACN,sBAAQ;IAER,MAAM,CAAC,CACL,kDAAS,SAAS,EAAC,iBAAiB,IAAK,cAAc;QACrD,+CAAQ,WAAW,GAAG,MAAM,CAAM;QAClC,gDAAS,gBAAgB,GAAG,WAAW,CAAO;QAC9C,gDAAS,YAAY,GAAG,QAAQ,CAAO;QACtC,OAAO,IAAI,gDAAS,WAAW,GAAG,OAAO,CAAO,CACzC,CACX,CAAC;AACJ,CAAC,CAAC"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/panel/nav/PanelNavigator.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from 'react';\r\nimport { Props as NavItemProps } from './PanelNavItem';\r\nexport interface Props {\r\n    children?: React.ReactNode;\r\n    /** The context of the navigator */\r\n    header: string;\r\n    description: string;\r\n    /** Shorthand for CommandBarNavItem. Typically an array of route shorthands */\r\n    navItems: React.ReactElement<any> | NavItemArrayProps[];\r\n    /** Additional bottom actions */\r\n    actions?: any;\r\n}\r\nexport interface NavItemArrayProps extends NavItemProps {\r\n    key: any;\r\n}\r\nexport declare const containerRules: {\r\n    [attributeName: string]: string;\r\n};\r\nexport declare const PanelNavigator: React.SFC<Props>;\r\n"}}
