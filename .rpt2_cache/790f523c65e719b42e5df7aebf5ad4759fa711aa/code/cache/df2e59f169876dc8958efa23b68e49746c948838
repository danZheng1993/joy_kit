{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nvar barOptions = function (side) {\r\n    return css({\r\n        content: '\"\"',\r\n        height: '2px',\r\n        width: '0',\r\n        bottom: '1px',\r\n        position: 'absolute',\r\n        background: '#4A90E2',\r\n        transition: '0.2s ease all'\r\n    }, side === 'left' ? { left: '50%' } : { right: '50%' });\r\n};\r\nvar barRules = css({\r\n    position: 'relative',\r\n    display: 'block',\r\n    width: '300px',\r\n    '::before': barOptions('left'),\r\n    '::after': barOptions('right')\r\n});\r\nvar errorBarRules = css({\r\n    position: 'relative',\r\n    display: 'block',\r\n    content: '\"\"',\r\n    height: '2px',\r\n    bottom: '1px',\r\n    background: 'red'\r\n});\r\nvar errorText = css({\r\n    color: 'red',\r\n    margin: '4px 0 0 5px',\r\n    fontSize: '14px'\r\n});\r\nvar labelRules = function (value, error) {\r\n    return css({\r\n        color: !error ? '#333' : 'red',\r\n        fontSize: '18px',\r\n        fontWeight: 'normal',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        opacity: '0.5',\r\n        left: '5px',\r\n        top: '10px',\r\n        transition: '0.2s ease all'\r\n    }, value\r\n        ? {\r\n            top: '-10px',\r\n            fontSize: '14px'\r\n        }\r\n        : null);\r\n};\r\nvar inputGroupRules = function (value, error) {\r\n    return css({\r\n        position: 'relative',\r\n        margin: '14px 0 45px 0',\r\n        '& > label': labelRules(value, error),\r\n        '& > input': {\r\n            fontSize: '15px',\r\n            padding: '10px 6px 6px 6px',\r\n            display: 'block',\r\n            width: '100%',\r\n            border: 'none',\r\n            borderBottom: '1px solid #757575',\r\n            '::placeholder': {\r\n                visibility: 'hidden'\r\n            },\r\n            ':focus': {\r\n                '::placeholder': {\r\n                    visibility: 'inherit'\r\n                },\r\n                ' ~ .bar:before': {\r\n                    width: '50%'\r\n                },\r\n                ' ~ .bar:after': {\r\n                    width: '50%'\r\n                },\r\n                outline: 'none',\r\n                ' ~ label': {\r\n                    top: '-10px',\r\n                    fontSize: '14px',\r\n                    color: !error ? '#333' : 'red'\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\nexport var InputLine = function (_a) {\r\n    var handleChange = _a.handleChange, handleBlur = _a.handleBlur, value = _a.value, label = _a.label, error = _a.error, placeholder = _a.placeholder, _b = _a.required, required = _b === void 0 ? false : _b, _c = _a.updateValueToPlaceholder, updateValueToPlaceholder = _c === void 0 ? true : _c;\r\n    // Sort of a hack to make the placeholder the value when Enter key is pressed\r\n    var placeholderToValue = function (e) {\r\n        e.charCode === 13 && updateValueToPlaceholder && placeholder\r\n            ? handleChange({ type: 'change', target: { value: placeholder } })\r\n            : null;\r\n    };\r\n    return (React.createElement(\"div\", tslib_1.__assign({}, inputGroupRules(value, error)),\r\n        React.createElement(\"input\", { type: \"text\", placeholder: placeholder ? placeholder : null, value: value, onKeyPress: placeholderToValue, onChange: handleChange, onBlur: handleBlur, required: required }),\r\n        !error ? (React.createElement(\"span\", tslib_1.__assign({ className: \"bar\" }, barRules))) : (React.createElement(\"span\", tslib_1.__assign({ className: \"error-bar\" }, errorBarRules))),\r\n        React.createElement(\"span\", tslib_1.__assign({}, errorText), error),\r\n        label ? React.createElement(\"label\", null, label) : null));\r\n};\r\n//# sourceMappingURL=InputLine.js.map","map":{"version":3,"file":"InputLine.js","sourceRoot":"","sources":["InputLine.tsx"],"names":[],"mappings":"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"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/input/InputLine.d.ts","text":"export interface Props {\r\n    /** Function to call when input is updated */\r\n    handleChange: (e) => void;\r\n    /**Function called when input is blurred */\r\n    handleBlur?: (e) => void;\r\n    /** Determines if the input is a required field. Defaults to false */\r\n    required?: boolean;\r\n    /** Sets the label of the input */\r\n    label?: string;\r\n    /** Sets the placeholder of the input */\r\n    placeholder?: string;\r\n    /** Error message displayed under the input. (For validation purposes) */\r\n    error?: string;\r\n    /** Sets the value of the input */\r\n    value: string;\r\n    /** Determines if the input sets the value to the placeholder on 'Enter' key press. Defaults to false */\r\n    updateValueToPlaceholder?: boolean;\r\n}\r\nexport declare const InputLine: ({handleChange, handleBlur, value, label, error, placeholder, required, updateValueToPlaceholder}: Props) => JSX.Element;\r\n"}}
