{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nimport { ModalHeader } from './ModalHeader';\r\nimport { ModalContent } from './ModalContent';\r\nimport { ModalActions } from './ModalActions';\r\nimport { ModalPortal } from './ModalPortal';\r\n//======================\r\n// Styling\r\n//======================\r\nvar animations = function (isOpen) {\r\n    if (isOpen) {\r\n        return {\r\n            scale: [1, 1.05],\r\n            opacity: 1\r\n        };\r\n    }\r\n    return {\r\n        scale: [0.95, 1],\r\n        opacity: 0\r\n    };\r\n};\r\n/* CSS */\r\nvar sizeOptions = {\r\n    mini: { width: 360 },\r\n    small: { width: 480 },\r\n    normal: { width: 600 },\r\n    large: { width: 700 },\r\n    fullscreen: { width: '100%', height: '100%' }\r\n};\r\nvar modalRules = function (size) {\r\n    return css(sizeOptions[size], {\r\n        background: 'rgba(255,255,255, 1)',\r\n        borderRadius: '2',\r\n        boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\r\n        margin: '5em auto',\r\n        opacity: 0,\r\n        padding: '0 1.5rem',\r\n        top: '1em'\r\n    }, size !== 'fullscreen' && (_a = {},\r\n        _a[\"@media only screen and (max-width: 767px)\"] = {\r\n            width: '95%'\r\n        },\r\n        _a));\r\n    var _a;\r\n};\r\n/**\r\n * A modal displays content that temporarily blocks interactions with the main view\r\n */\r\nvar Modal = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Modal, _super);\r\n    function Modal() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Modal.prototype.render = function () {\r\n        return (React.createElement(ModalPortal, tslib_1.__assign({ type: \"modal\" }, this.props, { animations: animations, styleRules: modalRules(this.props.size) })));\r\n    };\r\n    Modal.defaultProps = {\r\n        size: 'small',\r\n        closeOnEscape: true,\r\n        closeOnBackgroundClick: true,\r\n        hideLightbox: false,\r\n        hideLightboxOnInactive: true\r\n    };\r\n    Modal.Header = ModalHeader;\r\n    Modal.Content = ModalContent;\r\n    Modal.Actions = ModalActions;\r\n    return Modal;\r\n}(React.Component));\r\nexport { Modal };\r\n//# sourceMappingURL=Modal.js.map","map":{"version":3,"file":"Modal.js","sourceRoot":"","sources":["Modal.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAA6B,MAAM,QAAQ,CAAC;AAExD,OAAO,EAAE,WAAW,EAA6B,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,YAAY,EAA8B,MAAM,gBAAgB,CAAC;AAC1E,OAAO,EAAE,YAAY,EAA8B,MAAM,gBAAgB,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAa,MAAM,eAAe,CAAC;AAqBvD,wBAAwB;AACxB,UAAU;AACV,wBAAwB;AAExB,IAAM,UAAU,GAAG,UAAA,MAAM;IACvB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC;YACL,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;YAChB,OAAO,EAAE,CAAC;SACX,CAAC;IACJ,CAAC;IACD,MAAM,CAAC;QACL,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QAChB,OAAO,EAAE,CAAC;KACX,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS;AAET,IAAM,WAAW,GAA6B;IAC5C,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACpB,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACrB,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACtB,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACrB,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;CAC9C,CAAC;AAEF,IAAM,UAAU,GAAG,UAAC,IAAU;IAC5B,MAAM,CAAC,GAAG,CACR,WAAW,CAAC,IAAI,CAAC,EACjB;QACE,UAAU,EAAE,sBAAsB;QAClC,YAAY,EAAE,GAAG;QACjB,SAAS,EAAE,0DAA0D;QACrE,MAAM,EAAE,UAAU;QAClB,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,UAAU;QACnB,GAAG,EAAE,KAAK;KACX,EACD,IAAI,KAAK,YAAY;QACnB,GAAC,2CAA2C,IAAG;YAC7C,KAAK,EAAE,KAAK;SACb;WACF,CACF,CAAC;;AACJ,CAAC,CAAC;AAEF;;GAEG;AACH;IAA2B,iCAAsB;IAAjD;;IAuBA,CAAC;IAVC,sBAAM,GAAN;QACE,MAAM,CAAC,CACL,oBAAC,WAAW,qBACV,IAAI,EAAC,OAAO,IACR,IAAI,CAAC,KAAK,IACd,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IACvC,CACH,CAAC;IACJ,CAAC;IArBM,kBAAY,GAAG;QACpB,IAAI,EAAE,OAAe;QACrB,aAAa,EAAE,IAAI;QACnB,sBAAsB,EAAE,IAAI;QAC5B,YAAY,EAAE,KAAK;QACnB,sBAAsB,EAAE,IAAI;KAC7B,CAAC;IAEK,YAAM,GAAG,WAAW,CAAC;IACrB,aAAO,GAAG,YAAY,CAAC;IACvB,aAAO,GAAG,YAAY,CAAC;IAYhC,YAAC;CAAA,AAvBD,CAA2B,KAAK,CAAC,SAAS,GAuBzC;SAvBY,KAAK"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/modal/Modal.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from 'react';\r\nimport { Props as ModalHeaderProps } from './ModalHeader';\r\nimport { Props as ModalContentProps } from './ModalContent';\r\nimport { Props as ModalActionsProps } from './ModalActions';\r\nimport { BaseProps } from './ModalPortal';\r\nexport interface Props extends BaseProps {\r\n    /** A modal can vary in size. */\r\n    size?: Size;\r\n}\r\nexport interface State {\r\n    isClosing: boolean;\r\n}\r\nexport declare type Size = 'mini' | 'small' | 'normal' | 'large' | 'fullscreen';\r\n/**\r\n * A modal displays content that temporarily blocks interactions with the main view\r\n */\r\nexport declare class Modal extends React.Component<Props> {\r\n    static defaultProps: {\r\n        size: Size;\r\n        closeOnEscape: boolean;\r\n        closeOnBackgroundClick: boolean;\r\n        hideLightbox: boolean;\r\n        hideLightboxOnInactive: boolean;\r\n    };\r\n    static Header: React.StatelessComponent<ModalHeaderProps>;\r\n    static Content: React.StatelessComponent<ModalContentProps>;\r\n    static Actions: React.StatelessComponent<ModalActionsProps>;\r\n    render(): JSX.Element;\r\n}\r\n"}}
