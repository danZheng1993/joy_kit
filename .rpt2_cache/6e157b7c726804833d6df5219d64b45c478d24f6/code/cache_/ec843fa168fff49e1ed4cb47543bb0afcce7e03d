{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nimport { ActionHeader } from '../actionHeader/ActionHeader';\r\nimport { TEXT } from '../../styles/variables';\r\nvar wrapperRules = css({\r\n    maxWidth: '520px',\r\n    paddingTop: '40px'\r\n});\r\nvar textAreaRules = function (disabled) {\r\n    return css({\r\n        outline: 'none',\r\n        resize: 'none',\r\n        padding: '16px',\r\n        border: '1px solid #cccccc',\r\n        borderRadius: '3px',\r\n        width: '100%',\r\n        color: !disabled ? 'inherit' : TEXT.color,\r\n        backgroundColor: !disabled ? 'inherit' : '#F5F5F5'\r\n    });\r\n};\r\nexport var TextBox = function (_a) {\r\n    var title = _a.title, titleOption = _a.titleOption, subtitle = _a.subtitle, value = _a.value, handleOnChange = _a.handleOnChange, disabled = _a.disabled, _b = _a.rows, rows = _b === void 0 ? 6 : _b;\r\n    return (React.createElement(\"div\", tslib_1.__assign({}, wrapperRules),\r\n        React.createElement(ActionHeader, { title: title, titleOption: titleOption, subtitle: subtitle }),\r\n        React.createElement(\"textarea\", tslib_1.__assign({ disabled: disabled ? true : false }, textAreaRules(disabled), { value: value, onChange: handleOnChange, rows: rows }))));\r\n};\r\n//# sourceMappingURL=TextBox.js.map","map":{"version":3,"file":"TextBox.js","sourceRoot":"","sources":["TextBox.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AA0B9C,IAAM,YAAY,GAAG,GAAG,CAAC;IACvB,QAAQ,EAAE,OAAO;IACjB,UAAU,EAAE,MAAM;CACnB,CAAC,CAAC;AAEH,IAAM,aAAa,GAAG,UAAA,QAAQ;IAC5B,OAAA,GAAG,CAAC;QACF,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,mBAAmB;QAC3B,YAAY,EAAE,KAAK;QACnB,KAAK,EAAE,MAAM;QACb,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;QACzC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;KACnD,CAAC;AATF,CASE,CAAC;AAEL,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,EAQhB;QAPN,gBAAK,EACL,4BAAW,EACX,sBAAQ,EACR,gBAAK,EACL,kCAAc,EACd,sBAAQ,EACR,YAAQ,EAAR,6BAAQ;IACG,OAAA,CACX,gDAAS,YAAY;QACnB,oBAAC,YAAY,IAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,GAAI;QAC5E,mDACE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAC7B,aAAa,CAAC,QAAQ,CAAC,IAC3B,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,cAAc,EACxB,IAAI,EAAE,IAAI,IACV,CACE,CACP;AAXY,CAWZ,CAAC"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/textBox/TextBox.d.ts","text":"/// <reference types=\"react\" />\r\nexport interface Props {\r\n    /** Title of the text box */\r\n    title: string;\r\n    /** Title option shows to right of title in slightly lighter font color */\r\n    titleOption?: string;\r\n    /** Subtitle of text box, shows under the title */\r\n    subtitle?: string;\r\n    /** Value of the text box */\r\n    value: string;\r\n    /** Disables the textbox. Defaults to false */\r\n    disabled?: boolean;\r\n    /** Number of rows the text box sizes to. Defaults to 6 */\r\n    rows?: number;\r\n    /** Handles onChange events for textbox */\r\n    handleOnChange: (note: any) => void;\r\n}\r\nexport declare const TextBox: ({title, titleOption, subtitle, value, handleOnChange, disabled, rows}: Props) => JSX.Element;\r\n"}}
