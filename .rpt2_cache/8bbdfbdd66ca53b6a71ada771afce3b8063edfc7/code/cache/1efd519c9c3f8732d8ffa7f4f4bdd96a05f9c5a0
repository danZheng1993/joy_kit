{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { css } from 'glamor';\r\nimport { TEXT } from '../../styles/variables';\r\nimport { CommandBarNavItem } from './CommandBarNavItem';\r\nvar commandBarRules = css({\r\n    alignItems: 'center',\r\n    background: '#FFF',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%'\r\n});\r\nvar titleRules = css({\r\n    color: TEXT.color,\r\n    left: 40,\r\n    fontSize: 15,\r\n    position: 'absolute'\r\n});\r\nvar navRules = css({\r\n    '> *:not(:last-child)': {\r\n        marginRight: 100\r\n    }\r\n});\r\nvar actionRules = css({\r\n    position: 'absolute',\r\n    right: 40\r\n});\r\nvar renderNavItems = function (navItems) {\r\n    if (navItems instanceof Array) {\r\n        return navItems.map(function (_a) {\r\n            var content = _a.content, key = _a.key, handleOnClick = _a.handleOnClick;\r\n            return (React.createElement(CommandBarNavItem, { key: key, content: content, handleOnClick: handleOnClick }));\r\n        });\r\n    }\r\n    return navItems;\r\n};\r\nvar Container = function (_a) {\r\n    var contentRight = _a.contentRight, nav = _a.nav, title = _a.title;\r\n    return (React.createElement(\"div\", tslib_1.__assign({ className: \"command-bar\" }, commandBarRules),\r\n        React.createElement(\"div\", tslib_1.__assign({ className: \"command-bar__title\" }, titleRules), title),\r\n        React.createElement(\"div\", tslib_1.__assign({ className: \"command-bar__nav\" }, navRules), renderNavItems(nav)),\r\n        contentRight && (React.createElement(\"div\", tslib_1.__assign({ className: \"command-bar__action\" }, actionRules), contentRight))));\r\n};\r\nvar CommandBar = {\r\n    Container: Container,\r\n    NavItem: CommandBarNavItem\r\n};\r\nexport { CommandBar };\r\n//# sourceMappingURL=CommandBar.js.map","map":{"version":3,"file":"CommandBar.js","sourceRoot":"","sources":["CommandBar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAC9C,OAAO,EAAE,iBAAiB,EAAqB,MAAM,qBAAqB,CAAC;AAiB3E,IAAM,eAAe,GAAG,GAAG,CAAC;IAC1B,UAAU,EAAE,QAAQ;IACpB,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MAAM;IACf,cAAc,EAAE,QAAQ;IACxB,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,MAAM;CACf,CAAC,CAAC;AAEH,IAAM,UAAU,GAAG,GAAG,CAAC;IACrB,KAAK,EAAE,IAAI,CAAC,KAAK;IACjB,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,UAAU;CACrB,CAAC,CAAC;AAEH,IAAM,QAAQ,GAAG,GAAG,CAAC;IACnB,sBAAsB,EAAE;QACtB,WAAW,EAAE,GAAG;KACjB;CACF,CAAC,CAAC;AAEH,IAAM,WAAW,GAAG,GAAG,CAAC;IACtB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,EAAE;CACV,CAAC,CAAC;AAEH,IAAM,cAAc,GAAG,UAAA,QAAQ;IAC7B,EAAE,CAAC,CAAC,QAAQ,YAAY,KAAK,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,EAA+B;gBAA7B,oBAAO,EAAE,YAAG,EAAE,gCAAa;YAAO,OAAA,CACvD,oBAAC,iBAAiB,IAChB,GAAG,EAAE,GAAG,EACR,OAAO,EAAE,OAAO,EAChB,aAAa,EAAE,aAAa,GAC5B,CACH;QANwD,CAMxD,CAAC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,IAAM,SAAS,GAAqB,UAAC,EAA4B;QAA1B,8BAAY,EAAE,YAAG,EAAE,gBAAK;IAC7D,MAAM,CAAC,CACL,8CAAK,SAAS,EAAC,aAAa,IAAK,eAAe;QAC9C,8CAAK,SAAS,EAAC,oBAAoB,IAAK,UAAU,GAC/C,KAAK,CACF;QACN,8CAAK,SAAS,EAAC,kBAAkB,IAAK,QAAQ,GAC3C,cAAc,CAAC,GAAG,CAAC,CAChB;QACL,YAAY,IAAI,CACf,8CAAK,SAAS,EAAC,qBAAqB,IAAK,WAAW,GACjD,YAAY,CACT,CACP,CACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,UAAU,GAAG;IACjB,SAAS,WAAA;IACT,OAAO,EAAE,iBAAiB;CAC3B,CAAC;AAEF,OAAO,EAAE,UAAU,EAAE,CAAC"},"dts":{"name":"/Users/michaelcorrigan/Code/joy_kit/src/components/commandBar/CommandBar.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from 'react';\r\nimport { Props as NavProps } from './CommandBarNavItem';\r\nexport interface Props {\r\n    /** Shorthand for an additional action */\r\n    contentRight?: any;\r\n    /** Can be an element to render or can be shorthand for an array of CommandBarNavItems   */\r\n    nav: React.ReactElement<any> | NavItemsArray[];\r\n    /** Shorthand for primary content */\r\n    title: any;\r\n}\r\nexport interface NavItemsArray extends NavProps {\r\n    key: string;\r\n}\r\ndeclare const CommandBar: {\r\n    Container: React.StatelessComponent<Props>;\r\n    NavItem: ({children, content, handleOnClick}: NavProps) => JSX.Element;\r\n};\r\nexport { CommandBar };\r\n"}}
